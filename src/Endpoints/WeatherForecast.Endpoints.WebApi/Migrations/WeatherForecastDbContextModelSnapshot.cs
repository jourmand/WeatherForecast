// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeatherForecast.Infrastructures.Data.Commons;

#nullable disable

namespace WeatherForecast.Endpoints.WebApi.Migrations
{
    [DbContext(typeof(WeatherForecastDbContext))]
    partial class WeatherForecastDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.7");

            modelBuilder.Entity("WeatherForecast.Core.Domain.WeatherAggregate.Weather", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WeatherData", (string)null);
                });

            modelBuilder.Entity("WeatherForecast.Core.Domain.WeatherAggregate.Weather", b =>
                {
                    b.OwnsOne("WeatherForecast.Core.Domain.WeatherAggregate.ValueObjects.Temperature", "Temperature", b1 =>
                        {
                            b1.Property<Guid>("WeatherId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Value")
                                .HasColumnType("INTEGER")
                                .HasColumnName("Temperature");

                            b1.HasKey("WeatherId");

                            b1.ToTable("WeatherData");

                            b1.WithOwner()
                                .HasForeignKey("WeatherId");
                        });

                    b.OwnsOne("WeatherForecast.Core.Domain.WeatherAggregate.ValueObjects.Timestamp", "Timestamp", b1 =>
                        {
                            b1.Property<Guid>("WeatherId")
                                .HasColumnType("TEXT");

                            b1.Property<DateOnly>("Value")
                                .HasColumnType("TEXT")
                                .HasColumnName("Timestamp");

                            b1.HasKey("WeatherId");

                            b1.ToTable("WeatherData");

                            b1.WithOwner()
                                .HasForeignKey("WeatherId");
                        });

                    b.Navigation("Temperature");

                    b.Navigation("Timestamp");
                });
#pragma warning restore 612, 618
        }
    }
}
